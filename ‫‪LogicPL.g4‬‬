grammar LogicPL;

LogicPL
:
;


UNARY_OP
    :
        '+' | '-' | '!'
    ;


BINARY_ARITHMETIC_OP1
    :
        '*' | '/' | '%'
    ;


BINARY_ARITHMETIC_OP2
    :
        '+' | '-'
    ;


RELATIONAL_OP1
    :
        '<' | '<=' | '>' | '>='
    ;


RELATIONAL_OP2
    :
        '==' | '!='
    ;


LOGICAL_AND_OP
    :
        '&&'
    ;


LOGICAL_OR_OP
    :
        '||'
    ;


ASSIGNMENT_OP
    :
        '='
    ;


OPERATORS
    :
        UNARY_OP | BINARY_ARITHMETIC_OP1 | BINARY_ARITHMETIC_OP2 | RELATIONAL_OP1
        | RELATIONAL_OP2 | LOGICAL_AND_OP | LOGICAL_OR_OP | ASSIGNMENT_OP
    ;


IDENTIFIER
    :
        [a-z][a-zA-Z0-9_]*
    ;


INT
    :
        [1-9][0-9]* | '0'
    ;


FLOAT
    :
    ;

BOOLEAN
    : 
        'true' | 'false'
    ;



STRING
    :
        '"' .*? '"'
    ;


WHITESPACE
    :   
        (' ' | '\t')+ -> skip
    ;

NEWLINE
    :   
        ('\r' '\n'? | '\n')-> skip
    ;

COMMENT
    :   
        '#' ~[\r\n]*-> skip
    ;