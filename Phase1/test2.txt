#func(void);

#functions:
function f1(int a, boolean b): boolean {
    #check post-order
    #check variableDec
    #functionCall
    #int a = 1 * b - c / 2;
    #int c = b;
    #float m;
    #int f = 3;
    #int d = func(a, b);
    #boolean c  = func(b);
    #(a <= b) => (a = c + 2 / 3 * c;)
    #([Pre(?)] != [2, 3]) => (a = [1 ,2];)
    #func(c, b);
    return c + d / v * (b + 1);
}

function f2(float c, int d): float {
    #int[4] arr = [1,2, 4 * 5, func(2 + 4) - 3 * (4 + 1)];
    #boolean[1] a = [!(func(a) && c || !(s && !(true || d )))] ;
    #func(c + 1 * e < e);
}
#main
main {

}

#               changes:
# 1. argument for functioncall -> or-exp.
# 2. array element -> or-exp.
# 3. print for FunctionCall (see line)
# 4. add print for relational-op
# 5. some other changes for pre-order...